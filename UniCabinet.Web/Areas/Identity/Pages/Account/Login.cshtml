@page
@model UniCabinet.Web.Areas.Identity.Pages.Account.LoginModel
@{
    ViewData["Title"] = "Вход";
}


<h2>@ViewData["Title"]</h2>

<div class="row">
    <div class="col-md-6">
        <form method="post">
            <h4>Используйте свою учетную запись</h4>
            <hr />
            @Html.ValidationSummary("", new { @class = "text-danger" })
            
            @if (Model.IsLockedOut)
            {
                <div class="alert alert-danger">
                    Ваш аккаунт заблокирован. Попробуйте снова через <span id="lockout-timer"></span>.
                </div>
            }

            <div class="form-group">
                <label asp-for="Input.Email"></label>
                <input asp-for="Input.Email" class="form-control" disabled="@(Model.IsLockedOut)" />
                <span asp-validation-for="Input.Email" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Input.Password"></label>
                <input asp-for="Input.Password" class="form-control" disabled="@(Model.IsLockedOut)" />
                <span asp-validation-for="Input.Password" class="text-danger"></span>
            </div>
            <div class="form-group">
                <div class="form-check">
                    <input asp-for="Input.RememberMe" class="form-check-input" disabled="@(Model.IsLockedOut)" />
                    <label asp-for="Input.RememberMe" class="form-check-label"></label>
                </div>
            </div>
            <div class="form-group">
                <button type="submit" class="btn btn-primary" @(Model.IsLockedOut ? "disabled" : "")>Войти</button>
            </div>
            <div class="form-group">
                <a asp-page="./ForgotPassword">Забыли пароль?</a>
            </div>
        </form>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />

    @if (Model.IsLockedOut && Model.RemainingLockoutTime > TimeSpan.Zero)
    {
        <script>
            // Функция для форматирования времени
            function formatTime(ts) {
                var totalSeconds = Math.floor(ts / 1000);
                var minutes = Math.floor(totalSeconds / 60);
                var seconds = totalSeconds % 60;
                return minutes + " минут " + seconds + " секунд";
            }

            // Получение оставшегося времени из серверной модели
            var remainingTime = @Model.RemainingLockoutTime.TotalMilliseconds;

            // Отображение оставшегося времени
            var timerElement = document.getElementById("lockout-timer");
            if (timerElement) {
                function updateTimer() {
                    if (remainingTime <= 0) {
                        timerElement.textContent = "0 секунд";
                        // Перезагрузка страницы после окончания блокировки
                        setTimeout(function () {
                            location.reload();
                        }, 1000);
                    } else {
                        timerElement.textContent = formatTime(remainingTime);
                        remainingTime -= 1000;
                        setTimeout(updateTimer, 1000);
                    }
                }

                updateTimer();
            }
        </script>
    }
}
