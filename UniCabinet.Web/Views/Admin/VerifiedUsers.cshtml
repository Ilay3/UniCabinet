@using UniCabinet.Web.ViewModel
@model StudentGroupViewModel

<h3>Список пользователй</h3>

<form method="get" asp-action="VerifiedUsers" id="roleFilterForm">
    <div class="form-group">
        <label for="roleFilter">Выберите роль для фильтрации:</label>
        <select class="form-control" id="roleFilter" name="role" data-selected-role="@ViewBag.SelectedRole">
            @foreach (var role in (IEnumerable<SelectListItem>)ViewBag.Roles)
            {
                <option value="@role.Value" selected>@role.Text</option>
            }
        </select>
    </div>

    <input type="hidden" name="pageNumber" value="@Model.Pagination.CurrentPage" />
    <input type="hidden" name="pageSize" value="@Model.Pagination.RouteValues.PageSize" />
    <input type="hidden" name="query" value="@Model.Pagination.RouteValues.Query" />
</form>

<div id="searchContainer" class="d-flex align-items-center">
    <input type="text" id="searchBox" class="form-control" placeholder="Поиск по имени или email..." onkeyup="searchUsers()" autocomplete="off" value="@Model.Pagination.RouteValues.Query" />
    <button type="button" id="resetButton" class="btn btn-secondary ml-2" onclick="resetSearch()">Сбросить</button>
    <ul id="suggestionsList" class="list-group"></ul>
</div>

@if (Model.Users != null && Model.Users.Any())
{
    <h2>Результаты фильтрации</h2>
    <table class="table">
        <thead>
            <tr>
                <th>Email</th>
                <th>Полное Имя</th>
                <th>Роли</th>
                <th>Текущая Группа</th>
                <th>Изменить Группу</th>
                <th>Изменить Роль</th>
            </tr>
        </thead>
        <tbody id="userTableBody">
            @foreach (var user in Model.Users)
            {
                <tr data-user-id="@user.Id" class="user-row">
                    <td>@user.Email</td>
                    <td>@user.FullName</td>
                    <td>@string.Join(", ", user.Roles)</td>
                    <td>@user.GroupName</td>
                    <td>
                        @if (user.Roles.Contains("Student") && user.Roles.Contains("Verified"))
                        {
                            <button type="button" class="btn btn-primary" data-toggle="modal" data-target="#groupModal_@user.Id">
                                Изменить группу
                            </button>
                            <partial name="_GroupModal" model="user" />
                        }
                        else
                        {
                            <span class="text-muted">Изменение группы недоступно</span>
                        }
                    </td>
                    <td>
                        <button type="button" class="btn btn-secondary" data-toggle="modal" data-target="#roleModal_@user.Id">
                            Изменить роль
                        </button>
                        <partial name="_RoleModal" model="user" />
                    </td>
                </tr>
            }
        </tbody>
    </table>

@await Html.PartialAsync("_Pagination", Model.Pagination)

}
else
{
    <p>Нет пользователей, удовлетворяющих условиям фильтрации.</p>
}
